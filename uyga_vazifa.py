class Driver:    def __init__(self, name):        self.name = name        self.points = 0    def getName(self):        return self.name    def getPoints(self):        return self.points    def addPoints(self, points):        self.points += pointsclass GP:    def __init__(self, name):        self.name = name        self.race_results = []    def getName(self):        return self.name    def addResult(self, driver, position):        self.race_results.append((driver, position))    def getPosition(self, driver):        for result in self.race_results:            if result[0] == driver:                return result[1]        return -1class Championship:    def __init__(self):        self.drivers = []        self.grand_prix = []    def createDriver(self, name):        driver = Driver(name)        self.drivers.append(driver)        return driver    def getDrivers(self):        return self.drivers    def getDriver(self, name):        for driver in self.drivers:            if driver.getName() == name:                return driver        return None    def defineGrandPrix(self, name):        grand_prix = GP(name)        self.grand_prix.append(grand_prix)        return grand_prix    def getGrandPrix(self, name):        for gp in self.grand_prix:            if gp.getName() == name:                return gp        return None    def getChampionshipRanking(self):        sorted_drivers = sorted(self.drivers, key=lambda driver: driver.getPoints(), reverse=True)        return sorted_driversclass Time:    def __init__(self, hours, minutes, seconds, ms):        self.hours = hours        self.minutes = minutes        self.seconds = seconds        self.ms = ms    def toString(self):        return f"{self.hours}:{self.minutes}:{self.seconds}.{self.ms}"# Testingchampionship = Championship()# Haydovchilar yaratishdriver1 = championship.createDriver("Lewis Hamilton")driver2 = championship.createDriver("Max Verstappen")driver3 = championship.createDriver("Sergio Perez")# Grand Prix lar yaratishgp1 = championship.defineGrandPrix("Bahrain Grand Prix")gp2 = championship.defineGrandPrix("Spanish Grand Prix")# Natijalarni qo'shishgp1.addResult(driver1, 1)gp1.addResult(driver2, 2)gp1.addResult(driver3, 3)gp2.addResult(driver2, 1)gp2.addResult(driver1, 2)gp2.addResult(driver3, 3)# Haydovchilar ro'yhatini olishdrivers = championship.getDrivers()for driver in drivers:    print(driver.getName())# Grand Prix lar ro'yhatini olishgrand_prix_list = championship.grand_prixfor grand_prix in grand_prix_list:    print(grand_prix.getName())# Haydovchilar poygalarda necha ball to'plaganini olishfor driver in drivers:    print(f"{driver.getName()}: {driver.getPoints()} points")# Championship ro'yhatini olishchampionship_ranking = championship.getChampionshipRanking()for i, driver in enumerate(championship_ranking):    print(f"{i + 1}. {driver.getName()}")